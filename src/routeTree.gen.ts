/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PublicLayoutRouteImport } from './routes/_public-layout/route'
import { Route as AuthLayoutRouteImport } from './routes/_auth-layout/route'
import { Route as PublicLayoutIndexImport } from './routes/_public-layout/index'
import { Route as LoginLayoutSignUpImport } from './routes/_login-layout/sign-up'
import { Route as LoginLayoutSignInImport } from './routes/_login-layout/sign-in'
import { Route as AuthLayoutSettingsImport } from './routes/_auth-layout/settings'
import { Route as AuthLayoutProfileImport } from './routes/_auth-layout/profile'
import { Route as AuthLayoutMyFeedImport } from './routes/_auth-layout/my-feed'
import { Route as AuthLayoutEditorImport } from './routes/_auth-layout/editor'
import { Route as PublicLayoutArticleSlugImport } from './routes/_public-layout/article/$slug'

// Create/Update Routes

const PublicLayoutRouteRoute = PublicLayoutRouteImport.update({
  id: '/_public-layout',
  getParentRoute: () => rootRoute,
} as any)

const AuthLayoutRouteRoute = AuthLayoutRouteImport.update({
  id: '/_auth-layout',
  getParentRoute: () => rootRoute,
} as any)

const PublicLayoutIndexRoute = PublicLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PublicLayoutRouteRoute,
} as any)

const LoginLayoutSignUpRoute = LoginLayoutSignUpImport.update({
  id: '/_login-layout/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const LoginLayoutSignInRoute = LoginLayoutSignInImport.update({
  id: '/_login-layout/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const AuthLayoutSettingsRoute = AuthLayoutSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthLayoutRouteRoute,
} as any)

const AuthLayoutProfileRoute = AuthLayoutProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthLayoutRouteRoute,
} as any)

const AuthLayoutMyFeedRoute = AuthLayoutMyFeedImport.update({
  id: '/my-feed',
  path: '/my-feed',
  getParentRoute: () => AuthLayoutRouteRoute,
} as any)

const AuthLayoutEditorRoute = AuthLayoutEditorImport.update({
  id: '/editor',
  path: '/editor',
  getParentRoute: () => AuthLayoutRouteRoute,
} as any)

const PublicLayoutArticleSlugRoute = PublicLayoutArticleSlugImport.update({
  id: '/article/$slug',
  path: '/article/$slug',
  getParentRoute: () => PublicLayoutRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth-layout': {
      id: '/_auth-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthLayoutRouteImport
      parentRoute: typeof rootRoute
    }
    '/_public-layout': {
      id: '/_public-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicLayoutRouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth-layout/editor': {
      id: '/_auth-layout/editor'
      path: '/editor'
      fullPath: '/editor'
      preLoaderRoute: typeof AuthLayoutEditorImport
      parentRoute: typeof AuthLayoutRouteImport
    }
    '/_auth-layout/my-feed': {
      id: '/_auth-layout/my-feed'
      path: '/my-feed'
      fullPath: '/my-feed'
      preLoaderRoute: typeof AuthLayoutMyFeedImport
      parentRoute: typeof AuthLayoutRouteImport
    }
    '/_auth-layout/profile': {
      id: '/_auth-layout/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthLayoutProfileImport
      parentRoute: typeof AuthLayoutRouteImport
    }
    '/_auth-layout/settings': {
      id: '/_auth-layout/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthLayoutSettingsImport
      parentRoute: typeof AuthLayoutRouteImport
    }
    '/_login-layout/sign-in': {
      id: '/_login-layout/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof LoginLayoutSignInImport
      parentRoute: typeof rootRoute
    }
    '/_login-layout/sign-up': {
      id: '/_login-layout/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof LoginLayoutSignUpImport
      parentRoute: typeof rootRoute
    }
    '/_public-layout/': {
      id: '/_public-layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicLayoutIndexImport
      parentRoute: typeof PublicLayoutRouteImport
    }
    '/_public-layout/article/$slug': {
      id: '/_public-layout/article/$slug'
      path: '/article/$slug'
      fullPath: '/article/$slug'
      preLoaderRoute: typeof PublicLayoutArticleSlugImport
      parentRoute: typeof PublicLayoutRouteImport
    }
  }
}

// Create and export the route tree

interface AuthLayoutRouteRouteChildren {
  AuthLayoutEditorRoute: typeof AuthLayoutEditorRoute
  AuthLayoutMyFeedRoute: typeof AuthLayoutMyFeedRoute
  AuthLayoutProfileRoute: typeof AuthLayoutProfileRoute
  AuthLayoutSettingsRoute: typeof AuthLayoutSettingsRoute
}

const AuthLayoutRouteRouteChildren: AuthLayoutRouteRouteChildren = {
  AuthLayoutEditorRoute: AuthLayoutEditorRoute,
  AuthLayoutMyFeedRoute: AuthLayoutMyFeedRoute,
  AuthLayoutProfileRoute: AuthLayoutProfileRoute,
  AuthLayoutSettingsRoute: AuthLayoutSettingsRoute,
}

const AuthLayoutRouteRouteWithChildren = AuthLayoutRouteRoute._addFileChildren(
  AuthLayoutRouteRouteChildren,
)

interface PublicLayoutRouteRouteChildren {
  PublicLayoutIndexRoute: typeof PublicLayoutIndexRoute
  PublicLayoutArticleSlugRoute: typeof PublicLayoutArticleSlugRoute
}

const PublicLayoutRouteRouteChildren: PublicLayoutRouteRouteChildren = {
  PublicLayoutIndexRoute: PublicLayoutIndexRoute,
  PublicLayoutArticleSlugRoute: PublicLayoutArticleSlugRoute,
}

const PublicLayoutRouteRouteWithChildren =
  PublicLayoutRouteRoute._addFileChildren(PublicLayoutRouteRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof PublicLayoutRouteRouteWithChildren
  '/editor': typeof AuthLayoutEditorRoute
  '/my-feed': typeof AuthLayoutMyFeedRoute
  '/profile': typeof AuthLayoutProfileRoute
  '/settings': typeof AuthLayoutSettingsRoute
  '/sign-in': typeof LoginLayoutSignInRoute
  '/sign-up': typeof LoginLayoutSignUpRoute
  '/': typeof PublicLayoutIndexRoute
  '/article/$slug': typeof PublicLayoutArticleSlugRoute
}

export interface FileRoutesByTo {
  '': typeof AuthLayoutRouteRouteWithChildren
  '/editor': typeof AuthLayoutEditorRoute
  '/my-feed': typeof AuthLayoutMyFeedRoute
  '/profile': typeof AuthLayoutProfileRoute
  '/settings': typeof AuthLayoutSettingsRoute
  '/sign-in': typeof LoginLayoutSignInRoute
  '/sign-up': typeof LoginLayoutSignUpRoute
  '/': typeof PublicLayoutIndexRoute
  '/article/$slug': typeof PublicLayoutArticleSlugRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth-layout': typeof AuthLayoutRouteRouteWithChildren
  '/_public-layout': typeof PublicLayoutRouteRouteWithChildren
  '/_auth-layout/editor': typeof AuthLayoutEditorRoute
  '/_auth-layout/my-feed': typeof AuthLayoutMyFeedRoute
  '/_auth-layout/profile': typeof AuthLayoutProfileRoute
  '/_auth-layout/settings': typeof AuthLayoutSettingsRoute
  '/_login-layout/sign-in': typeof LoginLayoutSignInRoute
  '/_login-layout/sign-up': typeof LoginLayoutSignUpRoute
  '/_public-layout/': typeof PublicLayoutIndexRoute
  '/_public-layout/article/$slug': typeof PublicLayoutArticleSlugRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/editor'
    | '/my-feed'
    | '/profile'
    | '/settings'
    | '/sign-in'
    | '/sign-up'
    | '/'
    | '/article/$slug'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/editor'
    | '/my-feed'
    | '/profile'
    | '/settings'
    | '/sign-in'
    | '/sign-up'
    | '/'
    | '/article/$slug'
  id:
    | '__root__'
    | '/_auth-layout'
    | '/_public-layout'
    | '/_auth-layout/editor'
    | '/_auth-layout/my-feed'
    | '/_auth-layout/profile'
    | '/_auth-layout/settings'
    | '/_login-layout/sign-in'
    | '/_login-layout/sign-up'
    | '/_public-layout/'
    | '/_public-layout/article/$slug'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthLayoutRouteRoute: typeof AuthLayoutRouteRouteWithChildren
  PublicLayoutRouteRoute: typeof PublicLayoutRouteRouteWithChildren
  LoginLayoutSignInRoute: typeof LoginLayoutSignInRoute
  LoginLayoutSignUpRoute: typeof LoginLayoutSignUpRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthLayoutRouteRoute: AuthLayoutRouteRouteWithChildren,
  PublicLayoutRouteRoute: PublicLayoutRouteRouteWithChildren,
  LoginLayoutSignInRoute: LoginLayoutSignInRoute,
  LoginLayoutSignUpRoute: LoginLayoutSignUpRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth-layout",
        "/_public-layout",
        "/_login-layout/sign-in",
        "/_login-layout/sign-up"
      ]
    },
    "/_auth-layout": {
      "filePath": "_auth-layout/route.tsx",
      "children": [
        "/_auth-layout/editor",
        "/_auth-layout/my-feed",
        "/_auth-layout/profile",
        "/_auth-layout/settings"
      ]
    },
    "/_public-layout": {
      "filePath": "_public-layout/route.tsx",
      "children": [
        "/_public-layout/",
        "/_public-layout/article/$slug"
      ]
    },
    "/_auth-layout/editor": {
      "filePath": "_auth-layout/editor.tsx",
      "parent": "/_auth-layout"
    },
    "/_auth-layout/my-feed": {
      "filePath": "_auth-layout/my-feed.tsx",
      "parent": "/_auth-layout"
    },
    "/_auth-layout/profile": {
      "filePath": "_auth-layout/profile.tsx",
      "parent": "/_auth-layout"
    },
    "/_auth-layout/settings": {
      "filePath": "_auth-layout/settings.tsx",
      "parent": "/_auth-layout"
    },
    "/_login-layout/sign-in": {
      "filePath": "_login-layout/sign-in.tsx"
    },
    "/_login-layout/sign-up": {
      "filePath": "_login-layout/sign-up.tsx"
    },
    "/_public-layout/": {
      "filePath": "_public-layout/index.tsx",
      "parent": "/_public-layout"
    },
    "/_public-layout/article/$slug": {
      "filePath": "_public-layout/article/$slug.tsx",
      "parent": "/_public-layout"
    }
  }
}
ROUTE_MANIFEST_END */
