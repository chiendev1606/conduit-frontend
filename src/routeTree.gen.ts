/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PublicLayoutRouteImport } from './routes/_public-layout/route'
import { Route as AuthLayoutRouteImport } from './routes/_auth-layout/route'
import { Route as PublicLayoutIndexImport } from './routes/_public-layout/index'
import { Route as LoginLayoutSignUpImport } from './routes/_login-layout/sign-up'
import { Route as LoginLayoutSignInImport } from './routes/_login-layout/sign-in'
import { Route as AuthLayoutUserProfileImport } from './routes/_auth-layout/user-profile'
import { Route as PublicLayoutArticleArticleIdImport } from './routes/_public-layout/article/$articleId'

// Create/Update Routes

const PublicLayoutRouteRoute = PublicLayoutRouteImport.update({
  id: '/_public-layout',
  getParentRoute: () => rootRoute,
} as any)

const AuthLayoutRouteRoute = AuthLayoutRouteImport.update({
  id: '/_auth-layout',
  getParentRoute: () => rootRoute,
} as any)

const PublicLayoutIndexRoute = PublicLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PublicLayoutRouteRoute,
} as any)

const LoginLayoutSignUpRoute = LoginLayoutSignUpImport.update({
  id: '/_login-layout/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const LoginLayoutSignInRoute = LoginLayoutSignInImport.update({
  id: '/_login-layout/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const AuthLayoutUserProfileRoute = AuthLayoutUserProfileImport.update({
  id: '/user-profile',
  path: '/user-profile',
  getParentRoute: () => AuthLayoutRouteRoute,
} as any)

const PublicLayoutArticleArticleIdRoute =
  PublicLayoutArticleArticleIdImport.update({
    id: '/article/$articleId',
    path: '/article/$articleId',
    getParentRoute: () => PublicLayoutRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth-layout': {
      id: '/_auth-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthLayoutRouteImport
      parentRoute: typeof rootRoute
    }
    '/_public-layout': {
      id: '/_public-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicLayoutRouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth-layout/user-profile': {
      id: '/_auth-layout/user-profile'
      path: '/user-profile'
      fullPath: '/user-profile'
      preLoaderRoute: typeof AuthLayoutUserProfileImport
      parentRoute: typeof AuthLayoutRouteImport
    }
    '/_login-layout/sign-in': {
      id: '/_login-layout/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof LoginLayoutSignInImport
      parentRoute: typeof rootRoute
    }
    '/_login-layout/sign-up': {
      id: '/_login-layout/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof LoginLayoutSignUpImport
      parentRoute: typeof rootRoute
    }
    '/_public-layout/': {
      id: '/_public-layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicLayoutIndexImport
      parentRoute: typeof PublicLayoutRouteImport
    }
    '/_public-layout/article/$articleId': {
      id: '/_public-layout/article/$articleId'
      path: '/article/$articleId'
      fullPath: '/article/$articleId'
      preLoaderRoute: typeof PublicLayoutArticleArticleIdImport
      parentRoute: typeof PublicLayoutRouteImport
    }
  }
}

// Create and export the route tree

interface AuthLayoutRouteRouteChildren {
  AuthLayoutUserProfileRoute: typeof AuthLayoutUserProfileRoute
}

const AuthLayoutRouteRouteChildren: AuthLayoutRouteRouteChildren = {
  AuthLayoutUserProfileRoute: AuthLayoutUserProfileRoute,
}

const AuthLayoutRouteRouteWithChildren = AuthLayoutRouteRoute._addFileChildren(
  AuthLayoutRouteRouteChildren,
)

interface PublicLayoutRouteRouteChildren {
  PublicLayoutIndexRoute: typeof PublicLayoutIndexRoute
  PublicLayoutArticleArticleIdRoute: typeof PublicLayoutArticleArticleIdRoute
}

const PublicLayoutRouteRouteChildren: PublicLayoutRouteRouteChildren = {
  PublicLayoutIndexRoute: PublicLayoutIndexRoute,
  PublicLayoutArticleArticleIdRoute: PublicLayoutArticleArticleIdRoute,
}

const PublicLayoutRouteRouteWithChildren =
  PublicLayoutRouteRoute._addFileChildren(PublicLayoutRouteRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof PublicLayoutRouteRouteWithChildren
  '/user-profile': typeof AuthLayoutUserProfileRoute
  '/sign-in': typeof LoginLayoutSignInRoute
  '/sign-up': typeof LoginLayoutSignUpRoute
  '/': typeof PublicLayoutIndexRoute
  '/article/$articleId': typeof PublicLayoutArticleArticleIdRoute
}

export interface FileRoutesByTo {
  '': typeof AuthLayoutRouteRouteWithChildren
  '/user-profile': typeof AuthLayoutUserProfileRoute
  '/sign-in': typeof LoginLayoutSignInRoute
  '/sign-up': typeof LoginLayoutSignUpRoute
  '/': typeof PublicLayoutIndexRoute
  '/article/$articleId': typeof PublicLayoutArticleArticleIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth-layout': typeof AuthLayoutRouteRouteWithChildren
  '/_public-layout': typeof PublicLayoutRouteRouteWithChildren
  '/_auth-layout/user-profile': typeof AuthLayoutUserProfileRoute
  '/_login-layout/sign-in': typeof LoginLayoutSignInRoute
  '/_login-layout/sign-up': typeof LoginLayoutSignUpRoute
  '/_public-layout/': typeof PublicLayoutIndexRoute
  '/_public-layout/article/$articleId': typeof PublicLayoutArticleArticleIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/user-profile'
    | '/sign-in'
    | '/sign-up'
    | '/'
    | '/article/$articleId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/user-profile'
    | '/sign-in'
    | '/sign-up'
    | '/'
    | '/article/$articleId'
  id:
    | '__root__'
    | '/_auth-layout'
    | '/_public-layout'
    | '/_auth-layout/user-profile'
    | '/_login-layout/sign-in'
    | '/_login-layout/sign-up'
    | '/_public-layout/'
    | '/_public-layout/article/$articleId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthLayoutRouteRoute: typeof AuthLayoutRouteRouteWithChildren
  PublicLayoutRouteRoute: typeof PublicLayoutRouteRouteWithChildren
  LoginLayoutSignInRoute: typeof LoginLayoutSignInRoute
  LoginLayoutSignUpRoute: typeof LoginLayoutSignUpRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthLayoutRouteRoute: AuthLayoutRouteRouteWithChildren,
  PublicLayoutRouteRoute: PublicLayoutRouteRouteWithChildren,
  LoginLayoutSignInRoute: LoginLayoutSignInRoute,
  LoginLayoutSignUpRoute: LoginLayoutSignUpRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth-layout",
        "/_public-layout",
        "/_login-layout/sign-in",
        "/_login-layout/sign-up"
      ]
    },
    "/_auth-layout": {
      "filePath": "_auth-layout/route.tsx",
      "children": [
        "/_auth-layout/user-profile"
      ]
    },
    "/_public-layout": {
      "filePath": "_public-layout/route.tsx",
      "children": [
        "/_public-layout/",
        "/_public-layout/article/$articleId"
      ]
    },
    "/_auth-layout/user-profile": {
      "filePath": "_auth-layout/user-profile.tsx",
      "parent": "/_auth-layout"
    },
    "/_login-layout/sign-in": {
      "filePath": "_login-layout/sign-in.tsx"
    },
    "/_login-layout/sign-up": {
      "filePath": "_login-layout/sign-up.tsx"
    },
    "/_public-layout/": {
      "filePath": "_public-layout/index.tsx",
      "parent": "/_public-layout"
    },
    "/_public-layout/article/$articleId": {
      "filePath": "_public-layout/article/$articleId.tsx",
      "parent": "/_public-layout"
    }
  }
}
ROUTE_MANIFEST_END */
